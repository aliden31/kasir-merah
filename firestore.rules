rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check user role
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Admins can do anything
    function isAdmin() {
      return getUserRole() == 'admin';
    }

    // Kasir can perform their specific tasks
    function isKasir() {
      return getUserRole() == 'kasir';
    }

    // Any authenticated user
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Users: Can read their own data. Only admins can create/update/delete users.
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAdmin();
    }

    // Products: Admins can do anything. Kasir can only read.
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Sales: Admins can do anything. Kasir can only create. Update is tricky due to stock logic, so we allow it for now but it's handled in transactions.
    match /sales/{saleId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update: if isAdmin(); // Kasir updates via transaction, rule allows authenticated write
      allow delete: if isAdmin();
    }

    // Returns: Admins can do anything. Kasir can only create.
    match /returns/{returnId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow delete: if isAdmin();
    }
    
    // Expenses: Admins can do anything. Kasir can create.
    match /expenses/{expenseId} {
       allow read: if isAdmin();
       allow create: if isAuthenticated();
       allow delete: if isAdmin();
    }

    // Settings: Admins can change settings. Kasir can only read.
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Stock Opname Logs: Only admins can read/write.
    match /stockOpnameLogs/{logId} {
        allow read, write: if isAdmin();
    }

    // Activity Logs: Only admins can read/write.
     match /activityLogs/{logId} {
        allow read, write: if isAdmin();
    }
  }
}
